default:
  image: mcr.microsoft.com/dotnet/sdk:8.0

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  # SonarQube
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Cache location for Sonar analysis tasks
  GIT_DEPTH: "0"  # Fetch all branches, required for Sonar analysis

stages:
  - sonarqube-check
  - build
  - test

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - './obj/project.assets.json'
    - './obj/*.csproj.nuget.*'
    - '$NUGET_PACKAGES_DIRECTORY'

before_script:
  - apt-get update && apt-get install -y wget gnupg
  - dotnet restore --packages $NUGET_PACKAGES_DIRECTORY

sonarqube-check:
  stage: sonarqube-check
  script:
    - dotnet tool install --global dotnet-sonarscanner
    - export PATH="$PATH:$HOME/.dotnet/tools"
    - dotnet sonarscanner begin /k:"natallia_kunets_lab_ci_64608e38-ec78-4005-b39e-ba1f1ac110c8" /d:sonar.token="$SONAR_TOKEN" /d:sonar.host.url="$SONAR_HOST_URL"
    - dotnet build --configuration Release
    - dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

build:
  stage: build
  script:
    - dotnet build --configuration Release

test_chrome:
  stage: test
  script:
    - echo "Installing Google Chrome"
    - wget -qO- https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome-keyring.gpg
    - echo "deb [signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    - apt-get update && apt-get install -y google-chrome-stable
    - dotnet test --configuration Release --no-restore
