default:
  image: mcr.microsoft.com/dotnet/sdk:8.0

stages:
  - build
  #- sonarqube
  - test

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  # SonarQube
  #SONAR_PROJECT_KEY: "kunets.natallia_epam_lab.net"
  #SONAR_ORGANIZATION: "kunets-natallia"
  
  # ReportPortal
  REPORT_PORTAL_CONFIG_PATH: "Lab_CI\\Project.Core\\ReportPortal.config.json"

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - './obj/project.assets.json'
    - './obj/*.csproj.nuget.*'
    - '$NUGET_PACKAGES_DIRECTORY'

before_script:
  - apt-get update && apt-get install -y wget gnupg
  - dotnet restore --packages $NUGET_PACKAGES_DIRECTORY

build:
  stage: build
  script:
    - dotnet build --configuration Release
  only:
    - master
 
#sonarqube:
#  stage: sonarqube
#  script:
#    - echo "Starting SonarCloud analysis..."
#    - dotnet tool install --global dotnet-sonarscanner
#    - export PATH="$PATH:$HOME/.dotnet/tools"
#    - dotnet sonarscanner begin /k:"$SONAR_PROJECT_KEY" /o:"$SONAR_ORGANIZATION" /d:sonar.host.url="$SONAR_HOST_URL" /d:sonar.token="$SONAR_TOKEN"
#    - dotnet build
#    - dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"

test_chrome:
  stage: test
  script:
    - echo "Installing Google Chrome..."
    - wget -qO- https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome-keyring.gpg
    - echo "deb [signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    - apt-get update && apt-get install -y google-chrome-stable
    - echo "Executing tests..."
    - dotnet test --configuration Release --no-restore --filter "TestCategory=API"
  only:
    - master
